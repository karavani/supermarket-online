{"version":3,"sources":["./src/app/models/UserRegisterDetails.ts","./src/app/pipes/ProductsPipeByCategory.ts","./src/app/components/header/header.component.html","./src/app/components/header/header.component.ts","./src/app/components/main/general-info/general-info.component.ts","./src/app/components/main/general-info/general-info.component.html","./src/app/components/product-management/product-management.component.ts","./src/app/components/product-management/product-management.component.html","./src/app/services/CartItemsService.ts","./src/app/modules/app-routing.module.ts","./src/app/components/layout/layout.component.ts","./src/app/components/layout/layout.component.html","./src/app/services/ProductsService.ts","./src/environments/environment.ts","./src/app/services/OrdersService.ts","./src/app/models/OrderDetails.ts","./src/app/components/main/main.component.ts","./src/app/components/main/main.component.html","./src/app/interceptors/AuthenticationInterceptor.ts","./src/app/services/StateService.ts","./src/app/components/register/register-part2/register-part2.component.ts","./src/app/components/register/register-part2/register-part2.component.html","./src/app/models/Product.ts","./src/app/guards/admin.guard.ts","./src/app/components/customer/customer.component.ts","./src/app/components/customer/customer.component.html","./src/app/models/City.ts","./src/app/components/register/register.component.html","./src/app/components/register/register.component.ts","./src/app/components/customer/cart/cart.component.html","./src/app/components/customer/cart/cart.component.ts","./src/app/components/admin/admin.component.ts","./src/app/components/admin/admin.component.html","./src/app/guards/customer.guard copy.ts","./src/app/components/main/about/about.component.ts","./src/app/components/main/about/about.component.html","./src/app/components/main/login/login.component.ts","./src/app/components/main/login/login.component.html","./src/app/components/register/register-part1/register-part1.component.ts","./src/app/components/register/register-part1/register-part1.component.html","./src/app/services/UserService.ts","./src/app/components/modal/modal.ts","./src/app/components/modal/modal.html","./src/app/components/product-card/product-card.component.ts","./src/app/components/product-card/product-card.component.html","./src/app/modules/app.module.ts","./src/app/components/customer/checkout/checkout.component.ts","./src/app/components/customer/checkout/checkout.component.html","./src/app/models/UserLoginDetails.ts","./src/app/services/CartsService.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export class UserRegisterDetails {\r\n    public constructor(\r\n        public id?: number,\r\n        public email?: string,\r\n        public password?: number,\r\n        public city?: string,\r\n        public address?: string,\r\n        public firstName?: string,\r\n        public lastName?: string\r\n    ) { }\r\n}","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Product } from '../models/Product';\r\n\r\n@Pipe({\r\n    name: 'sortByCategoryPipe'\r\n})\r\nexport class ProductsPipeByCategory implements PipeTransform {\r\n\r\n    transform(products: Product[]): any {\r\n        return products.sort((a, b) => a.categoryID - b.categoryID);\r\n    }\r\n}\r\n","<div class=\"container\">\n    <div class=\"left\">\n    </div>\n    <div class=\"center\">\n        <h1><i class=\"fab fa-opencart\"></i> SuperMarket Online</h1>\n\n    </div>\n    <div class=\"right\">\n        <div class=\"userDetails\" *ngIf=\"this.usersService.userName !== '' \">\n            <p>hello {{this.usersService.userName}}!</p>\n            <a routerLink=\"/home\" (click)=\"logout()\">logout</a>\n        </div>\n        <div class=\"searchContainer\">\n            <input #myInput type=\"text\" placeholder=\"search for products\" [(ngModel)]=\"searchText\">\n            <button (click)=\"search()\"><i class=\"fas fa-search\"></i></button>\n        </div>\n    </div>\n</div>","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, ElementRef, HostListener, Input, OnInit, ViewChild } from '@angular/core';\nimport { ProductsService } from 'src/app/services/ProductsService';\nimport { UserService } from 'src/app/services/UserService';\n\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  public searchText: string\n  public isMobile: boolean\n  constructor(public usersService: UserService, private productsService: ProductsService) {\n    this.isMobile = false;\n    this.searchText = \"\";\n  }\n\n  @ViewChild('myInput', { static: false }) input: ElementRef;\n\n  ngOnInit(): void {\n    if (sessionStorage.getItem(\"userName\")) {\n      this.usersService.userName = sessionStorage.getItem(\"userName\");\n    }\n  }\n  \n  logout() {\n    sessionStorage.clear();\n  }\n\n  search() {\n    if (sessionStorage.getItem(\"isLoggedIn\")) {\n      this.productsService.selectedCategory = 999;\n      let observable = this.productsService.getProductByName(this.searchText);\n      observable.subscribe((response) => {\n        this.productsService.products = response;\n        this.searchText = \"\";\n        this.input.nativeElement.focus();\n      }, error => {\n        alert('Failed to get products ' + JSON.stringify(error.statusText));\n      });\n    }\n    else {\n      this.searchText = \"\";\n      alert(\"You need to log in first..\")\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { OrdersService } from 'src/app/services/OrdersService';\nimport { ProductsService } from 'src/app/services/ProductsService';\n\n@Component({\n  selector: 'app-general-info',\n  templateUrl: './general-info.component.html',\n  styleUrls: ['./general-info.component.css']\n})\nexport class GeneralInfoComponent implements OnInit {\n  public productsNumber: number;\n  public ordersNumber: number;\n\n  constructor(private productsService: ProductsService, private ordersService: OrdersService) {\n    this.productsNumber = 0;\n    this.ordersNumber = 0;\n\n  }\n\n  ngOnInit(): void {\n    \n    let observable = this.productsService.getAllProductsNumber();\n    observable.subscribe(response => {\n      this.productsNumber = response[0].productsNumber;\n    }, error => {\n      alert('Failed to get products number ' + JSON.stringify(error));\n    });\n\n    observable = this.ordersService.getAllOrdersNumber();\n    observable.subscribe(response => {\n      this.ordersNumber = response[0].ordersNumber;\n    }, error => {\n      alert('Failed to get orders number ' + JSON.stringify(error));\n    });\n  }\n\n}\n","\n<i class=\"fas fa-poll\"></i>\n\n<h3>Available products in our store: {{this.productsNumber}}</h3>\n<mat-progress-bar mode=\"buffer\" value=\"{{this.productsNumber}}\"></mat-progress-bar>\n<br>\n<h3>Number of orders in our store: {{this.ordersNumber}}</h3>\n<mat-progress-bar mode=\"buffer\" value=\"{{this.ordersNumber}}\"></mat-progress-bar>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Product } from 'src/app/models/Product';\nimport { ProductsService } from 'src/app/services/ProductsService';\n\n@Component({\n  selector: 'app-product-management',\n  templateUrl: './product-management.component.html',\n  styleUrls: ['./product-management.component.css']\n})\nexport class ProductManagementComponent implements OnInit {\n  public hintDisplay: boolean\n\n  public productManagementForm: FormGroup;\n  constructor(private formBuilder: FormBuilder, public productsService: ProductsService) {\n    this.hintDisplay = false;\n  }\n\n  ngOnInit(): void {\n\n    this.productsService.isManagedMod = false;\n    this.productManagementForm = this.formBuilder.group({\n      productName: ['', Validators.required],\n      categoryID: [0, Validators.required],\n      price: [0, Validators.required],\n      imageURL: ['', [Validators.required, Validators.maxLength(245)]]\n    });\n  }\n\n  addNewProduct() {\n    this.productsService.isManagedMod = true;\n    this.productsService.product = new Product();\n\n  }\n  cancel() {\n    this.productsService.isManagedMod = false;\n    this.productsService.product = new Product();\n  }\n\n  submit() {\n    if (this.productsService.product.productID == undefined) {\n      this.productsService.product = new Product(undefined, this.productManagementForm.get(\"productName\").value,\n        this.productManagementForm.get(\"categoryID\").value,\n        this.productManagementForm.get(\"price\").value,\n        this.productManagementForm.get(\"imageURL\").value);\n      let observable = this.productsService.addNewProduct(this.productsService.product);\n      observable.subscribe((response: number) => {\n        alert(\"success\");\n        this.productsService.product.productID = response\n        this.initProductsUI();\n      }, error => {\n        alert('Failed to add product ' + JSON.stringify(error));\n      });\n    }\n    else {\n      this.productsService.product = new Product(this.productsService.product.productID, this.productManagementForm.get(\"productName\").value,\n        this.productManagementForm.get(\"categoryID\").value,\n        this.productManagementForm.get(\"price\").value,\n        this.productManagementForm.get(\"imageURL\").value);\n      let observable = this.productsService.updateProduct(this.productsService.product);\n      observable.subscribe(() => {\n        alert(\"succes\");\n        this.initProductsUI();\n      }, error => {\n        alert('Failed to get products ' + JSON.stringify(error));\n      });\n    }\n  }\n\n  initProductsUI() {\n    let products = [];\n    this.productsService.products.forEach((product => {\n      if (product.productID !== this.productsService.product.productID) {\n        products.push(product);\n      };\n    }))\n    products.push(this.productsService.product);\n    this.productsService.products = products;\n    this.cancel();\n  }\n}\n","<section>\n    <div class=\"topContainer\">\n        <h1>Product Management</h1>\n        <div (mouseover)=\"hintDisplay=true\" (mouseout)=\"hintDisplay=false\">\n            <mat-hint *ngIf=\"hintDisplay\">new product</mat-hint><br>\n            <button (click)=\"addNewProduct()\"><i class=\"fas fa-plus\"></i></button>\n        </div>\n    </div><br>\n    <div class=\"mainContainer\">\n        <mat-hint [hidden]=\"this.productsService.isManagedMod\">-add or update products to open managmenet form-\n        </mat-hint>\n\n        <div [hidden]=\"!this.productsService.isManagedMod\">\n            <form [formGroup]='productManagementForm' (ngSubmit)='submit()'>\n\n                <div>\n                    <mat-form-field>\n                        <input matInput placeholder=\"product name\"\n                            [(ngModel)]=\"this.productsService.product.productName\" formControlName='productName'>\n                        <mat-error>\n                            Product name requierd\n                        </mat-error>\n                    </mat-form-field><br>\n                    <mat-form-field>\n                        <select matNativeControl placeholder=\"category\" formControlName=\"categoryID\">\n                            <option *ngFor=\"let category of this.productsService.categories\"\n                                [selected]=\"this.productsService.product.categoryID == category.categoryID\"\n                                [value]=\"category.categoryID\">{{category.categoryName}}</option>\n                        </select>\n                    </mat-form-field><br>\n                    <mat-form-field>\n                        <input matInput [(ngModel)]=\"this.productsService.product.price\" type=\"number\"\n                            placeholder=\"price\" formControlName='price' [min]=\"1\">\n                        <mat-hint>\n                            price in ILS₪\n                        </mat-hint>\n                        <mat-error>\n                            Product price requierd\n                        </mat-error>\n                    </mat-form-field><br>\n                </div>\n                <br>\n                <mat-form-field>\n                    <input matInput [(ngModel)]=\"this.productsService.product.imageURL\" placeholder=\"imageURL\"\n                        formControlName='imageURL'>\n                    <mat-error>\n                        image URL requierd\n                    </mat-error>\n                </mat-form-field><br>\n                <div>\n                    <button mat-raised-button [disabled]=\"productManagementForm.invalid\" color='primary'>Save</button>\n                    <br>\n                    <hr>\n                </div>\n            </form>\n            <div class=\"cancelBtn\"><button (click)=\"cancel()\">cancel</button></div>\n        </div>\n\n    </div>\n    <div class=\"lowContainer\">\n\n    </div>\n</section>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Product } from '../models/Product';\r\n\r\n\r\n\r\n@Injectable({\r\n    // One object for the entire website\r\n    providedIn: 'root'\r\n})\r\nexport class CartItemsService {\r\n\r\n    public totalPrice: number;\r\n    public cartItemsMap: Map<number, Product>;\r\n    constructor(private http: HttpClient) {\r\n        this.cartItemsMap = new Map();\r\n        this.totalPrice = 0;\r\n    }\r\n    public getCartItems(cartID: number): Observable<Product[]> {\r\n        return this.http.get<Product[]>(\"http://localhost:4200/cart-items/\" + cartID);\r\n    }\r\n    public addNewItemToCart(product: Product): Observable<Product> {\r\n        return this.http.post<Product>(\"http://localhost:4200/cart-items/\", product);\r\n    }\r\n    public deleteItemFromCart(itemID: number)  {\r\n        return this.http.delete(\"http://localhost:4200/cart-items/\"+itemID);\r\n    }\r\n    public updateCartItem(item: Product): Observable<Product> {\r\n        return this.http.put<Product>(\"http://localhost:4200/cart-items/\", item);\r\n    }\r\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { CustomerComponent } from '../components/customer/customer.component';\nimport { MainComponent } from '../components/main/main.component';\nimport { RegisterComponent } from '../components/register/register.component';\nimport { AdminGuard } from '../guards/admin.guard';\nimport { CustomerGuard } from '../guards/customer.guard copy';\n\nconst routes: Routes = [{ path: \"home\", component: MainComponent },\n{ path: \"home\", component: MainComponent },\n{ path: \"register\", component: RegisterComponent },\n{ path: \"login\", component: MainComponent },\n{ path: \"customer\", canActivate: [CustomerGuard], component: CustomerComponent },\n{ path: \"admin\", canActivate: [AdminGuard], component: AdminComponent},\n{ path: \"\", redirectTo: \"home\", pathMatch: \"full\" }, // pathMatch = התאמת המחרוזת הריקה לכלל הנתיב\n  // { path: \"**\", component: Page404Component } // Page not Found (Must be the last one!!!)\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-layout',\n  templateUrl: './layout.component.html',\n  styleUrls: ['./layout.component.css']\n})\nexport class LayoutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section>\n    <header>\n        <app-header></app-header>\n    </header>\n    <main>\n        <router-outlet></router-outlet>\n    </main>\n</section>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Category } from '../models/Category';\r\nimport { Product } from '../models/Product';\r\n\r\n\r\n\r\n@Injectable({\r\n    // One object for the entire website\r\n    providedIn: 'root'\r\n})\r\nexport class ProductsService {\r\n    public products: Product[];\r\n    public product: Product;\r\n    public categories: Category[];\r\n    public selectedCategory: number;\r\n    public isManagedMod: boolean;\r\n    constructor(private http: HttpClient) {\r\n        this.selectedCategory = 0;\r\n        this.products = [];\r\n        this.categories = [];\r\n        this.product = new Product();\r\n        this.isManagedMod\r\n    }\r\n    public getAllCategories(): Observable<Category[]> {\r\n        return this.http.get<Category[]>(\"http://localhost:4200/products/categories\");\r\n    }\r\n    public getAllProducts(): Observable<Product[]> {\r\n        return this.http.get<Product[]>(\"http://localhost:4200/products\");\r\n    }\r\n    public getAllProductsByCategory(categoryID: number): Observable<Product[]> {\r\n        return this.http.get<Product[]>(\"http://localhost:4200/products/categories/\" + categoryID);\r\n    }\r\n    public getProductByName(searchText: string) {\r\n        return this.http.get<Product[]>(\"http://localhost:4200/products/\" + searchText);\r\n    }\r\n    public getAllProductsNumber() {\r\n        return this.http.get(\"http://localhost:4200/products/number\");\r\n    }\r\n    public addNewProduct(product: Product) {\r\n        return this.http.post(\"http://localhost:4200/products/\", product);\r\n    }\r\n    public updateProduct(product: Product) {\r\n        return this.http.put(\"http://localhost:4200/products/\", product);\r\n    }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { OrderDetails } from '../models/OrderDetails';\r\n\r\n\r\n\r\n@Injectable({\r\n    // One object for the entire website\r\n    providedIn: 'root'\r\n})\r\nexport class OrdersService {\r\n\r\n    constructor(private http: HttpClient) {\r\n    }\r\n    public getAllOrdersNumber() {\r\n        return this.http.get(\"http://localhost:4200/orders/number\");\r\n    }\r\n    public getOrdersBusyDays() {\r\n        return this.http.get(\"http://localhost:4200/orders\");\r\n    }\r\n    public addNewOrder(order: OrderDetails){\r\n        return this.http.post(\"http://localhost:4200/orders\", order);\r\n\r\n    }\r\n\r\n}","export class OrderDetails {\r\n    public constructor(\r\n        public cartID?: number,\r\n        public totalPrice?: number,\r\n        public cityToDeliver?: string,\r\n        public addressToDeliver?: string,\r\n        public dateToDeliver?: Date,\r\n        public payment4LastDigits?: number\r\n    ) { }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"main-container\">\n    <div class=\"login-background\">\n        <img src=\"https://images.pexels.com/photos/6249/hands-woman-legs-laptop.jpg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n        alt=\"Avatar\" class=\"image\">\n            <div class=\"overlay\">\n                <app-login class=\"login-container\"></app-login>\n            </div>\n    </div>\n    <div class=\"about-info-background\">\n        <img src=\"https://images.pexels.com/photos/4199070/pexels-photo-4199070.jpeg?auto=compress&cs=tinysrgb&dpr=3&h=750&w=1260\"\n        alt=\"Avatar\" class=\"image\">\n        <div class=\"overlay\">\n            <app-about class=\"about-container\"></app-about>\n        </div>\n    </div>\n    <div class=\"general-info-background\">\n        <img src=\"https://images.pexels.com/photos/5632381/pexels-photo-5632381.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\"\n        alt=\"Avatar\" class=\"image\">\n            <div class=\"overlay\">\n                <app-general-info class=\"general-info-container\"></app-general-info>\n            </div>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from '../services/UserService';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationInterceptor implements HttpInterceptor {\r\n    // They will need to use their own userService for this (need save the token there after login)\r\n    constructor(private userService: UserService) { }\r\n\r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        // add authorization header with our token if available\r\n        let token:string;\r\n        token = sessionStorage.getItem(\"token\");\r\n        if (token) {            \r\n            request = request.clone({\r\n                setHeaders: {\r\n                    Authorization: token\r\n                }\r\n            });\r\n        }\r\n\r\n        return next.handle(request);\r\n    }\r\n}\r\n","import { Injectable, Input, Output } from '@angular/core';\r\nimport { UserRegisterDetails } from '../models/UserRegisterDetails';\r\n\r\n\r\n@Injectable({\r\n    // One object for the entire website\r\n    providedIn: 'root'\r\n\r\n})\r\nexport class StateService {\r\n    @Output()\r\n    isPart1Complete: boolean;\r\n    newUser: UserRegisterDetails;\r\n\r\n    constructor() {\r\n        this.isPart1Complete = false;\r\n        this.newUser = new UserRegisterDetails();\r\n    }\r\n\r\n    public registerStatus() {\r\n        return this.isPart1Complete = !this.isPart1Complete;\r\n    }\r\n\r\n}","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { City } from 'src/app/models/City';\nimport { StateService } from 'src/app/services/StateService';\nimport { UserService } from 'src/app/services/UserService';\n\n@Component({\n  selector: 'app-register-part2',\n  templateUrl: './register-part2.component.html',\n  styleUrls: ['./register-part2.component.css']\n})\nexport class RegisterPart2Component implements OnInit {\n\n\n  private usersService: UserService;\n  public registerForm: FormGroup;\n  public cities: Array<string>;\n\n\n  constructor(public stateService: StateService, usersService: UserService, private router: Router,\n    private formBuilder: FormBuilder) {\n    this.usersService = usersService;\n    this.cities = Object.values(City);\n  }\n\n\n  register(): void {\n    this.stateService.registerStatus();\n    this.stateService.newUser.city = this.city.value;\n    this.stateService.newUser.address = this.address.value;\n    this.stateService.newUser.firstName = this.firstName.value;\n    this.stateService.newUser.lastName = this.lastName.value;\n    console.log(this.stateService.newUser);\n    const observable = this.usersService.createUser(this.stateService.newUser);\n    observable.subscribe(() => {\n      alert(\"yayy! user created succesfully\");\n      this.router.navigate([\"/home\"]);\n    }, serverErrorResponse => {\n      if (serverErrorResponse.status == 601) {\n        this.stateService.newUser.email = null;\n        alert(\"email already exists\")\n      }\n      if (serverErrorResponse.status == 602) {\n        this.stateService.newUser.email = null;\n        alert(\"email not valid\")\n      }\n      if (serverErrorResponse.status !== 601 && serverErrorResponse.status !== 602) {\n        alert(\"Error! Status: \" + serverErrorResponse.status + \", Message: \" + serverErrorResponse.message);\n      }\n    });\n  }\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      city: ['', Validators.required],\n      address: ['', Validators.required],\n      firstName: ['', Validators.required],\n      lastName: ['', [Validators.required]]\n    }\n    )\n  }\n  get city() {\n    return this.registerForm.get('city');\n  }\n  get address() {\n    return this.registerForm.get('address');\n  }\n  get firstName() {\n    return this.registerForm.get('firstName');\n  }\n  get lastName() {\n    return this.registerForm.get('lastName');\n  }\n\n}\n","<!-- \n<div class=\"regiterContainer\">\n    \n    <form #regiterForm=\"ngForm\" [formGroup]=\"regiterFormGroup\" (submit)=\"register()\">\n        <h1 *ngIf=\"regiterForm.form.invalid\"><span class=\"steps\">1 - <span class=\"currentStep\">2</span></span> - <i class=\"fas fa-check\"></i></h1>\n        <h1 *ngIf=\"!regiterForm.form.invalid\"><span class=\"steps\">1 - 2 - </span><span class=\"currentStep\"><i class=\"fas fa-check\"></i></span></h1>\n\n        <details class=\"city-select\">\n            <summary class=\"radios\" >\n                <input type=\"radio\" name=\"item\" id=\"default\" title=\"City...\" checked style=\"color: gray;\" >\n                <input type=\"radio\" name=\"item\" id=\"item1\" (change)=\"onItemChange($event.target.title)\" title=\"Jeruslam\">\n                <input type=\"radio\" name=\"item\" id=\"item2\" (change)=\"onItemChange($event.target.title)\" title=\"Tel Aviv\">\n                <input type=\"radio\" name=\"item\" id=\"item3\" (change)=\"onItemChange($event.target.title)\" title=\"Haifa\">\n                <input type=\"radio\" name=\"item\" id=\"item4\" (change)=\"onItemChange($event.target.title)\" title=\"Rishon LeZion\">\n                <input type=\"radio\" name=\"item\" id=\"item5\" (change)=\"onItemChange($event.target.title)\" title=\"Petah Tikva\">\n                <input type=\"radio\" name=\"item\" id=\"item6\" (change)=\"onItemChange($event.target.title)\" title=\"Ashdod\">\n                <input type=\"radio\" name=\"item\" id=\"item7\" (change)=\"onItemChange($event.target.title)\" title=\"Netanya\">\n                <input type=\"radio\" name=\"item\" id=\"item8\" (change)=\"onItemChange($event.target.title)\" title=\"Beersheba\">\n                <input type=\"radio\" name=\"item\" id=\"item9\" (change)=\"onItemChange($event.target.title)\" title=\"Bnei Brak\">\n                <input type=\"radio\" name=\"item\" id=\"item10\"(change)=\"onItemChange($event.target.title)\"  title=\"Holon\">\n            </summary>\n            <ul class=\"list\">\n                <li>\n                    <label for=\"item1\">Jeruslam</label>\n                </li>\n                <li>\n                    <label for=\"item2\">Tel Aviv</label>\n                </li>\n                <li>\n                    <label for=\"item3\">Haifa</label>\n                </li>\n                <li>\n                    <label for=\"item4\">Rishon LeZion</label>\n                </li>\n                <li>\n                    <label for=\"item5\">Petah Tikva</label>\n                </li>\n                <li>\n                    <label for=\"item6\">Ashdod</label>\n                </li>\n                <li>\n                    <label for=\"item7\">Netanya</label>\n                </li>\n                <li>\n                    <label for=\"item8\">Beersheba</label>\n                </li>\n                <li>\n                    <label for=\"item9\">Bnei Brak</label>\n                </li>\n                <li>\n                    <label for=\"item10\">Holon</label>\n                </li>\n            </ul>\n        </details><br>\n\n        <input type=\"text\" placeholder=\"Street Address\" name=\"address\" [formControl]=\"addressFormControl\"><br>\n\n        <span *ngIf=\"addressFormControl.errors?.pattern && addressFormControl.touched\">address not valid</span><br>\n\n        <input type=\"text\" placeholder=\"First Name\" name=\"firstName\" [formControl]=\"firstNameFormControl\"><br>\n\n        <span *ngIf=\"firstNameFormControl.errors?.pattern && firstNameFormControl.touched\">First Name not\n            valid</span><br>\n\n        <input type=\"text\" placeholder=\"Last Name\" name=\"lastName\" [formControl]=\"lastNameFormControl\"><br>\n\n        <span *ngIf=\"lastNameFormControl.errors?.pattern && lastNameFormControl.touched\">Last Name not valid</span><br>\n\n\n        <button [disabled]=\"regiterForm.form.invalid && this.city == null \">sign up <i class=\"fas fa-check\"></i></button>\n        <a routerLink=\"/login\" (click)=\"this.stateService.registerStatus()\">cancel</a>\n    </form>\n\n</div> -->\n<div class=\"registerContainer\">\n\n\n    <h1 *ngIf=\"registerForm.invalid\"><span class=\"steps\">1 - <span class=\"currentStep\">2</span></span> - <i class=\"fas fa-check\"></i></h1>\n    <h1 *ngIf=\"!registerForm.invalid\"><span class=\"steps\">1 - 2 - </span><span class=\"currentStep\"><i class=\"fas fa-check\"></i></span></h1>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\">\n        <mat-form-field appearance=\"fill\">\n            <mat-label>City</mat-label>\n            <mat-select matNativeControl formControlName=\"city\" [(ngModel)]=\"this.stateService.newUser.city\">\n                <mat-option *ngFor=\"let city of cities\" [value]='city'>{{city}}</mat-option>\n            </mat-select><br>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"Address\" [(ngModel)]=\"this.stateService.newUser.address\" formControlName=\"address\"><br>\n            <mat-error *ngIf='address.invalid && address.touched'>\n                Your address does not look right\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"First Name\" [(ngModel)]=\"this.stateService.newUser.firstName\" formControlName=\"firstName\"><br>\n            <mat-error *ngIf=\"firstName.invalid && firstName.touched\">\n                Your password does not look right\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"Last Name\" [(ngModel)]=\"this.stateService.newUser.lastName\" formControlName=\"lastName\"><br>\n            <mat-error *ngIf=\"lastName.invalid && lastName.touched\">\n                Your lastName does not look right\n            </mat-error>\n        </mat-form-field>\n        <div class=\"btn-form\">\n            <button mat-raised-button [disabled]=\"registerForm.invalid\" color='primary'>next <i\n                    class=\"fas fa-arrow-right\"></i></button>\n            <a routerLink=\"/login\">cancel</a>\n        </div>\n    </form>\n\n</div>","export class Product {\r\n    public constructor(\r\n        public productID?: number,\r\n        public productName?: string,\r\n        public categoryID?: number,\r\n        public price?: number,\r\n        public imageURL?: string,\r\n        public quantity?: number,\r\n        public totalPrice?: number,\r\n        public cartID?: number,\r\n        public itemID?: number\r\n    ) {\r\n        quantity = 1;\r\n    }\r\n\r\n}","import { Injectable, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AdminGuard implements CanActivate {\n\n    public constructor(private router: Router) {}\n\n    public canActivate(): boolean {\n        const isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\n        const userType = sessionStorage.getItem(\"userType\");\n        if(isLoggedIn == \"true\" && userType == \"admin\") {\n            return true;\n        }\n\n        this.router.navigateByUrl(\"/login\");\n        alert(\"Access Denied\");\n        return false;\n    }\n\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Category } from 'src/app/models/Category';\nimport { Product } from 'src/app/models/Product';\nimport { CartItemsService } from 'src/app/services/CartItemsService';\nimport { CartsService } from 'src/app/services/CartsService';\nimport { ProductsService } from 'src/app/services/ProductsService';\nimport { ModalComponent } from '../modal/modal';\n\n@Component({\n  selector: 'app-customer',\n  templateUrl: './customer.component.html',\n  styleUrls: ['./customer.component.css']\n})\nexport class CustomerComponent implements OnInit {\n\n  public minimise: boolean;\n  public categories: Category[];\n  constructor(public productsService: ProductsService, public cartItemsService: CartItemsService,\n    public cartsService: CartsService) {\n    this.categories = [];\n    this.minimise = true;\n  }\n\n  getAllProducts() {\n    let observable = this.productsService.getAllProducts();\n    observable.subscribe(response => {\n      this.productsService.selectedCategory = 0;\n      this.productsService.products = response;\n    }, error => {\n      alert('Failed to get products ' + JSON.stringify(error.statusText));\n    });\n  }\n  \n  @ViewChild('modal', { static: false }) modal: ModalComponent\n\n  openModal(product: Product) {\n    let productID = product.productID\n    if (this.cartItemsService.cartItemsMap.has(productID)) {\n      alert(\"product already in cart\")\n      this.modal.btnSubText = \"update quantity\";\n      return this.modal.open(this.cartItemsService.cartItemsMap.get(productID));\n    }\n    else {\n      this.modal.open(Object.assign(new Product,product));\n    }\n  }\n\n  getProductsByCategory(categoryID: number) {\n    let observable = this.productsService.getAllProductsByCategory(categoryID);\n    observable.subscribe(response => {\n      this.productsService.selectedCategory = categoryID;\n      this.productsService.products = response;\n    }, error => {\n      alert('Failed to get products ' + JSON.stringify(error.statusText));\n    });\n  }\n\n  getAllCategories() {\n    let observable = this.productsService.getAllCategories();\n    observable.subscribe(response => {\n      this.categories = response;\n    }, error => {\n      alert('Failed to get categories ' + JSON.stringify(error.statusText));\n    });\n  }\n\n  ngOnInit(): void {\n    this.getAllProducts();\n    this.getAllCategories();\n  }\n}","<section>\n    <aside id=\"cart\" [ngClass]=\"{visible : minimise}\">\n        <app-cart></app-cart>\n    </aside>\n    <app-checkout *ngIf=\"this.cartsService.isInOrder\" [ngClass]=\"{visible : minimise}\"></app-checkout>\n    <main *ngIf=\"!this.cartsService.isInOrder\" [ngClass]=\"{visible : !minimise}\">\n        <button class=\"toggleBtn\" *ngIf=\"!this.cartsService.isInOrder\" (click)=\"minimise = !minimise\"><i *ngIf=\"!minimise\" class=\"fas fa-angle-double-right\"></i>\n            <i *ngIf=\"minimise\" class=\"fas fa-angle-double-left\"></i><i class=\"fas fa-shopping-cart\"></i></button>\n        <div class=\"topContainer\">\n            <a id=\"allProducts\" (click)=\"getAllProducts()\" [ngClass]=\"{visited : this.productsService.selectedCategory == 0} \">All products</a>\n            <a *ngFor=\"let category of categories\" [ngClass]=\"{visited : category.categoryID == this.productsService.selectedCategory} \" id=\"{{category.categoryID}}\"\n             (click)=\"getProductsByCategory(category.categoryID)\">{{category.categoryName}}</a>\n        </div>\n        <div class=\"mainContainer\">\n            <div class=\"productCard\" *ngFor=\"let product of this.productsService.products | sortByCategoryPipe\">\n                <app-product-card productName={{product.productName}} price={{product.price}}₪\n                    imageURL={{product.imageURL}} iClassName=\"fas fa-cart-plus\" (childEvent)=openModal(product)></app-product-card>\n            </div>\n        </div>\n\n    </main>\n    <app-modal #modal></app-modal>\n</section>","export enum City {\r\n    TEL_AVIV = \"Tel Aviv\",\r\n    JERUSALEM = \"Jerusalem\",\r\n    HAIFA = \"Haifa\",\r\n    BEER_SHEVA = \"Be'er Sheva\", \r\n    RISHON_LEZION = \"Rishon LeZion\",\r\n    ASHDOD = \"Ashdod\",\r\n    PETAH_TIKVA = \"Petah Tikva\",\r\n    NATANYA = \"Natanya\",\r\n    HOLON = \"Holon\",\r\n    BNEI_BRAK = \"Bnei Brak\"\r\n}","<i class=\"fas fa-user-circle\"></i>\n\n<app-register-part1 *ngIf = \"!this.stateService.isPart1Complete\"></app-register-part1>\n\n<app-register-part2 *ngIf = \"this.stateService.isPart1Complete\"></app-register-part2>","import { Component, OnInit } from '@angular/core';\nimport { StateService } from 'src/app/services/StateService';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  constructor(public stateService: StateService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"topContainer\">\n    <h1>My cart</h1>\n    <div *ngIf=\"this.cartsService.isInOrder\">\n        <button *ngIf=\"searchText !== null\" (click)=\"delete()\"><i class=\"fas fa-eraser\"></i></button>\n        <input #myInput type=\"text\" placeholder=\"search in cart\" (change)=\"searchInCart()\" [(ngModel)]=\"searchText\">\n    </div>\n</div>\n<div class=\"mainContainer\">\n    <div *ngFor=\"let item of this.cartItemsService.cartItemsMap | keyvalue\">\n        <app-product-card [ngClass]='{marked : (item.value.productName.toLowerCase().includes(searchText)) }'\n            id=\"{{item.value.productName}}\" #productCard productName={{item.value.productName}}\n            price={{item.value.totalPrice}}₪ quantity=*{{item.value.quantity}} imageURL={{item.value.imageURL}}\n            iClassName=\"far fa-trash-alt\" (childEvent)=\"deleteItem(item.value.itemID, item.value.productID)\">\n        </app-product-card>\n</div>\n</div>\n<div class=\"bottomContainer\">\n    <h3>total price: {{this.cartItemsService.totalPrice}}₪</h3>\n    <button *ngIf=\"!this.cartsService.isInOrder\" (click)=\"deleteAllCartItems()\"><i class=\"fas fa-trash\"></i></button>\n    <button [disabled]=\"this.cartItemsService.cartItemsMap.size == 0\" (click)=\"checkout()\">{{btnSubText}}</button>\n</div>","import { Component, ElementRef, Input, OnInit, ViewChild } from '@angular/core';\nimport { CartItemsService } from 'src/app/services/CartItemsService';\nimport { CartsService } from 'src/app/services/CartsService';\n\n@Component({\n  selector: 'app-cart',\n  templateUrl: './cart.component.html',\n  styleUrls: ['./cart.component.css']\n})\nexport class CartComponent implements OnInit {\n\n  public btnSubText: string;\n  public searchText: string\n  constructor(public cartsService: CartsService, public cartItemsService: CartItemsService) {\n    this.btnSubText = \"checkout\";\n    this.searchText = null;\n  }\n  @Input()\n  quantity: number;\n\n  ngOnInit(): void {\n    this.initCartBtn();\n    this.cartItemsService.totalPrice = 0;\n    let cartID = parseInt(sessionStorage.getItem(\"cartID\"));\n    let observable = this.cartItemsService.getCartItems(cartID);\n    observable.subscribe(response => {\n      response.forEach(item => {\n        this.cartItemsService.cartItemsMap.set(item.productID, item);\n        this.cartItemsService.totalPrice += item.totalPrice;\n      });\n    }, error => {\n      alert('Failed to get cart items ' + JSON.stringify(error.statusText));\n    });\n  }\n\n  searchInCart() {\n    if (this.searchText == \"\") {\n      this.searchText = null\n    }\n    this.searchText = this.searchText.toLowerCase();\n  }\n\n  initCartBtn() {\n    if (this.cartsService.isInOrder) {\n      this.btnSubText = \"back to shop\";\n    }\n    if (!this.cartsService.isInOrder) {\n      this.btnSubText = \"checkout\"\n    }\n  }\n\n  checkout() {\n    this.cartsService.isInOrder = !this.cartsService.isInOrder;\n    this.initCartBtn()\n  }\n\n  deleteItem(itemID: number, productID: number) {\n    let observable = this.cartItemsService.deleteItemFromCart(itemID);\n    observable.subscribe(() => {\n      let item = this.cartItemsService.cartItemsMap.get(productID);\n      this.cartItemsService.totalPrice -= item.totalPrice;\n      this.cartItemsService.cartItemsMap.delete(productID);\n    }, error => {\n      alert('Failed to delete cart items ' + JSON.stringify(error.statusText));\n    });\n  }\n\n  @ViewChild('myInput', { static: false }) input: ElementRef;\n\n  delete() {\n    this.searchText = null\n    this.input.nativeElement.focus();\n  }\n\n  deleteAllCartItems() {\n    let cartID = parseInt(sessionStorage.getItem(\"cartID\"));\n    let observable = this.cartsService.deleteAllCartItems(cartID);\n    observable.subscribe(() => {\n      this.cartItemsService.totalPrice = 0;\n      this.cartItemsService.cartItemsMap = new Map();\n    }, error => {\n      alert('Failed to delete cart contains ' + JSON.stringify(error));\n    });\n  }\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/models/Product';\nimport { ProductsService } from 'src/app/services/ProductsService';\n\n@Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.css']\n})\nexport class AdminComponent implements OnInit {\n\n  constructor(public productsService: ProductsService) {\n  }\n\n  ngOnInit(): void {\n    this.getAllProducts();\n    this.getAllCategories();\n  }\n  getProductsByCategory(categoryID: number) {\n    let observable = this.productsService.getAllProductsByCategory(categoryID);\n    observable.subscribe(response => {\n      this.productsService.selectedCategory = categoryID;\n      this.productsService.products = response;\n    }, error => {\n      alert('Failed to get products ' + JSON.stringify(error));\n    });\n  }\n  getAllCategories() {\n    let observable = this.productsService.getAllCategories();\n    observable.subscribe(response => {\n      this.productsService.categories = response;\n    }, error => {\n      alert('Failed to get categories ' + JSON.stringify(error));\n    });\n  }\n  updateProduct(product: Product) {\n    this.productsService.isManagedMod = true;\n    this.productsService.product = Object.assign(new Product, product);\n  }\n  getAllProducts() {\n    let observable = this.productsService.getAllProducts();\n    observable.subscribe(response => {\n      this.productsService.selectedCategory = 0;\n      this.productsService.products = response;\n    }, error => {\n      alert('Failed to get products ' + JSON.stringify(error));\n    });\n  }\n}\n","<section>\n    <aside>\n        <app-product-management></app-product-management>\n    </aside>\n    <main>\n        <div class=\"topContainer\" id=\"style-1\">\n            <a id=\"allProducts\" (click)=\"getAllProducts()\"\n                [ngClass]=\"{visited :  this.productsService.selectedCategory == 0} \">All products</a>\n            <div *ngFor=\"let category of this.productsService.categories\"> \n                <a [ngClass]=\"{visited : category.categoryID == this.productsService.selectedCategory} \"\n                    id=\"{{category.categoryID}}\"\n                    (click)=\"getProductsByCategory(category.categoryID)\">{{category.categoryName}}</a></div>\n        </div>\n        <div class=\"productsContainer\" id=\"style-1\">\n            <div class=\"productCard\" *ngFor=\"let product of this.productsService.products | sortByCategoryPipe\">\n                <app-product-card productName={{product.productName}} price={{product.price}}₪\n                    imageURL={{product.imageURL}} iClassName=\"fas fa-pencil-alt\" (childEvent)=\"updateProduct(product)\">\n                </app-product-card>\n            </div>\n        </div>\n    </main>\n</section>","import { Injectable, ANALYZE_FOR_ENTRY_COMPONENTS } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class CustomerGuard implements CanActivate {\n\n    public constructor(private router: Router) { }\n\n    public canActivate(): boolean {\n        const isLoggedIn = sessionStorage.getItem(\"isLoggedIn\");\n        const userType = sessionStorage.getItem(\"userType\");\n        // const userHasCart = sessionStorage.getItem(\"cartID\");\n        if (isLoggedIn == \"true\" && userType == \"customer\") {\n            return true;\n        }\n        if (isLoggedIn == \"true\" && userType == \"admin\") {\n            this.router.navigateByUrl(\"/admin\");\n            return false;\n        }\n        this.router.navigateByUrl(\"/login\");\n        alert(\"Access Denied\");\n        return false;\n    }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n    <i class=\"fas fa-info\"></i>\n    <h1>Welcome to our online store</h1>\n    <h4>Posted on 13 March 2021</h4>\n    <div class=\"text-wrapper\">\n        <p>\n            Welcome to our online store! Our team is proud to announce that we're now open for business, and we look\n            forward to\n            serving you all in the future. If you have any questions about this store or the products found within,\n            please don't\n            hesitate to contact us any time.\n            Our website has been carefully designed to provide you with an amazingly flexible online shopping\n            experience, and\n            its ease of navigation is something we think you'll grow to depend on and appreciate. Feel free to browse\n            our entire\n            product catalog, and let us know if you have any questions, comments or concerns about the items housed\n            within.</p>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { UserLoginDetails } from 'src/app/models/UserLoginDetails';\nimport { CartsService } from 'src/app/services/CartsService';\nimport { UserService } from 'src/app/services/UserService';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n\n    loginForm: FormGroup;\n    minDate = new Date(Date.now())\n    success = false;\n    hide = true;\n\n    public userLoginDetails: UserLoginDetails;\n    private usersService: UserService;\n\n    private cartsService: CartsService;\n    public openCartMessage: string;\n    public startShoppingButtonValue: string;\n    public isUserLoggedIn: boolean;\n    public userFirstName: string;\n\n    constructor(usersService: UserService, private router: Router, cartsService: CartsService\n        , private formBuilder: FormBuilder, private breakpointObserver: BreakpointObserver) {\n        this.userLoginDetails = new UserLoginDetails();\n        this.usersService = usersService;\n        this.cartsService = cartsService;\n        this.openCartMessage = \"\";\n        this.startShoppingButtonValue = \"\";\n        this.isUserLoggedIn = false;\n    }\n\n    public login(): void {\n\n        this.userLoginDetails.email = this.userName.value;\n        this.userLoginDetails.password = this.password.value;\n\n        // Creating an observable object\n        // It looks like an http request had been issued BUT IT DIDN'T\n        const observable = this.usersService.login(this.userLoginDetails);\n\n        // The method subscribe() ussues an http request to the server\n        // successfulServerRequestData\n        observable.subscribe(successfulServerRequestData => {\n            this.success = true;\n            sessionStorage.setItem(\"token\", successfulServerRequestData.token + \"\");\n            this.usersService.userType = successfulServerRequestData.userType;\n            sessionStorage.setItem(\"userType\", successfulServerRequestData.userType);\n            sessionStorage.setItem(\"isLoggedIn\", \"true\");\n            if (successfulServerRequestData.userType == \"customer\") {\n                this.isUserLoggedIn = true;\n                sessionStorage.setItem(\"userName\", successfulServerRequestData.name);\n                this.usersService.userName = successfulServerRequestData.name;\n                if (successfulServerRequestData.cart[0] == null) {\n                    this.openCartMessage = \"welcome \" + successfulServerRequestData.name + \"!\";\n                    this.startShoppingButtonValue = \"start shopping\";\n                    sessionStorage.setItem(\"lastOpenCartDate\", this.openCartMessage);\n                    return\n                }\n                if (successfulServerRequestData.cart[0].status != 1) {\n                    this.openCartMessage = \"you have an open cart from date: \" + successfulServerRequestData.cart[0].dateOfCreation;\n                    this.startShoppingButtonValue = \"resume shopping\";\n                    this.cartsService.cartID = successfulServerRequestData.cart[0].cartID;\n                    sessionStorage.setItem(\"cartID\", successfulServerRequestData.cart[0].cartID.toString());\n                    sessionStorage.setItem(\"lastOpenCartDate\", this.openCartMessage);\n                    return\n                }\n                else {\n                    this.openCartMessage = \"your last purchase was in: \" + successfulServerRequestData.cart[0].dateOfCreation;\n                    this.startShoppingButtonValue = \"start shopping\";\n                    sessionStorage.setItem(\"lastOpenCartDate\", this.openCartMessage);\n                    return\n                }\n            }\n\n            if (successfulServerRequestData.userType == \"admin\") {\n                sessionStorage.setItem(\"userName\", \"Admin\");\n                this.usersService.userName = \"Admin\";\n                return this.router.navigate([\"/admin\"]);\n            }\n\n\n        }, serverErrorResponse => { // Reaching here means that the server had failed\n            // serverErrorResponse is the object returned from the ExceptionsHandler\n            console.log(serverErrorResponse);\n            if (serverErrorResponse.status == 401) {\n                alert(\"Error! Message: \" + serverErrorResponse.statusText +\n                    \" user email or password are inccorect\");\n            }\n            else {\n                alert(\"Error! Message: \" + serverErrorResponse.statusText)\n            }\n        });\n    }\n\n    public getCartStatus() {\n        if (sessionStorage.getItem(\"isLoggedIn\") == \"true\" && sessionStorage.getItem(\"userType\") == \"customer\") {\n            let observable = this.cartsService.getCartStatus()\n            observable.subscribe(response => {\n                console.log(response);\n                if (response[0].status == 1) {\n                    this.openCartMessage = \"your last purchase was in date: \" + response[0].dateOfCreation;\n                    sessionStorage.setItem(\"lastOpenCartDate\", this.openCartMessage);\n                }\n                if (response[0].status == 0) {\n                    this.openCartMessage = \"you have an open cart from date: \" + response[0].dateOfCreation;\n                    sessionStorage.setItem(\"lastOpenCartDate\", this.openCartMessage);\n                }\n            }, error => {\n                alert('Failed to get products ' + JSON.stringify(error));\n            });\n        }\n    }\n\n    public startShopping() {\n        if (this.startShoppingButtonValue == \"start shopping\") {\n            let observable = this.cartsService.creatNewCart();\n            observable.subscribe(response => {\n                this.cartsService.cartID = response;\n                sessionStorage.setItem(\"cartID\", response.toString());\n            }, error => {\n                alert('Failed to get products ' + JSON.stringify(error));\n            });\n        }\n        if (sessionStorage.getItem(\"userType\") == \"customer\") {\n            this.router.navigate([\"/customer\"]);\n        }\n        else {\n            this.router.navigate([\"/admin\"]);\n        }\n    }\n\n    ngOnInit() {\n        this.getCartStatus();\n        if (sessionStorage.getItem(\"userType\") == \"customer\" && sessionStorage.getItem(\"token\")) {\n            this.success = true;\n            this.isUserLoggedIn = true;\n            this.startShoppingButtonValue = \"resume shopping\";\n            this.usersService.userName = sessionStorage.getItem(\"userName\");\n        }\n        if (sessionStorage.getItem(\"lastOpenCartDate\")) {\n            this.openCartMessage = sessionStorage.getItem(\"lastOpenCartDate\");\n        }\n        if (sessionStorage.getItem(\"userType\") == \"admin\" && sessionStorage.getItem(\"token\")) {\n            this.success = true;\n            this.isUserLoggedIn = true;\n            this.startShoppingButtonValue = \"Go ahead!\";\n        }\n        this.loginForm = this.formBuilder.group({\n            userName: ['', [Validators.required, Validators.email]],\n            password: ['', Validators.required]\n        });\n    }\n\n    get userName() {\n        return this.loginForm.get('userName');\n    }\n    get password() {\n        return this.loginForm.get('password');\n    }\n    get isMobile() {\n        return this.breakpointObserver.isMatched('(max-width: 767px)');\n    }\n}\n","<div>\n    <i class=\"fas fa-user-alt\"></i>\n    <div [hidden]=\"!success\">\n        <h5 [hidden]=\"!success\">{{openCartMessage}}</h5>\n        <button [hidden]=\"!success\" mat-raised-button color=\"primary\" (click)=\"startShopping()\">{{startShoppingButtonValue}}</button>\n    </div>\n\n    \n<form [formGroup]='loginForm' (ngSubmit)='login()' [hidden]=\"success\">\n    \n<div class=\"loginContainer\">\n    <mat-form-field>\n        <input matInput placeholder=\"userName\" formControlName='userName'>\n\n        <mat-error *ngIf='userName.invalid && userName.touched'>\n            Your user name does not look right\n        </mat-error>\n    </mat-form-field><br>\n    <mat-form-field>\n        <input matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"password\" formControlName='password'>\n\n        <mat-error *ngIf='password.invalid && password.touched'>\n            Password requierd\n        </mat-error>\n    </mat-form-field>\n    </div>\n    <br>\n    <button mat-raised-button [disabled]=\"loginForm.invalid\" color='primary'>Sign in</button> <br>\n    <hr>\n    <mat-hint>Don't have an account yet?<a routerLink=\"/register\">sign up</a></mat-hint>\n</form>\n\n</div>","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { StateService } from 'src/app/services/StateService';\n\n@Component({\n  selector: 'app-register-part1',\n  templateUrl: './register-part1.component.html',\n  styleUrls: ['./register-part1.component.css']\n})\nexport class RegisterPart1Component implements OnInit {\n\n  registerForm: FormGroup;\n  hide = true;\n  constructor(public stateService: StateService, private formBuilder: FormBuilder) { }\n\n\n  mustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n      const control = formGroup.controls[controlName];\n      const matchingControl = formGroup.controls[matchingControlName];\n\n      if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n        // return if another validator has already found an error on the matchingControl\n        return;\n      }\n\n      // set error on matchingControl if validation fails\n      if (control.value !== matchingControl.value) {\n        matchingControl.setErrors({ mustMatch: true });\n      } else {\n        matchingControl.setErrors(null);\n      }\n    }\n  }\n\n  registerPart1(): void {\n    this.stateService.registerStatus();\n    this.stateService.newUser.id = this.id.value\n    this.stateService.newUser.email = this.email.value\n    this.stateService.newUser.password = this.password.value\n  }\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      id: ['', Validators.required],\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(30),\n      Validators.pattern(/^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$/)]],\n      confirmPassword: ['', [Validators.required]]\n    },\n      { validator: this.mustMatch('password', 'confirmPassword') }\n    )\n  }\n  get id() {\n    return this.registerForm.get('id');\n  }\n  get email() {\n    return this.registerForm.get('email');\n  }\n  get password() {\n    return this.registerForm.get('password');\n  }\n  get confirmPassword() {\n    return this.registerForm.get('confirmPassword');\n  }\n\n\n}\n\n","<div class=\"registerContainer\">\n\n\n    <h1><span class=\"step\">1</span> - 2 - <i class=\"fas fa-check\"></i></h1>\n    <form [formGroup]=\"registerForm\" (ngSubmit)=\"registerPart1()\">\n        <mat-form-field>\n            <input matInput type=\"number\" placeholder=\"User ID\" [(ngModel)]=\"this.stateService.newUser.id\" formControlName=\"id\"><br>\n            <mat-error *ngIf='id.invalid && id.touched'>\n                Your id does not look right\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"User email\" [(ngModel)]=\"this.stateService.newUser.email\" formControlName=\"email\"><br>\n            <mat-error *ngIf='email.invalid && email.touched'>\n                Your email does not look right\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\"><br>\n            <mat-error *ngIf=\"!password.hasError('pattern') && password.invalid && password.touched\">\n                Your password does not look right\n            </mat-error>\n            <mat-error *ngIf=\"password.hasError('pattern') && password.touched\">\n                Your password must contain one letter, and numbers\n            </mat-error>\n            <mat-hint>at least one letter, and numbers</mat-hint>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"password\" placeholder=\"Confirm Password\" formControlName=\"confirmPassword\"><br>\n            <mat-error *ngIf=\"confirmPassword.invalid && confirmPassword.touched\">\n                Your password mismatch\n            </mat-error>\n        </mat-form-field>\n        <div class=\"btn-form\">\n            <button mat-raised-button [disabled]=\"registerForm.invalid\" color='primary'>next <i\n                    class=\"fas fa-arrow-right\"></i></button>\n            <a routerLink=\"/login\">cancel</a>\n        </div>\n    </form>\n\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { SuccessfulLoginServerResponse } from '../models/SuccessfulLoginServerResponse';\r\nimport { UserLoginDetails } from '../models/UserLoginDetails';\r\nimport { UserRegisterDetails } from '../models/UserRegisterDetails';\r\n\r\n\r\n@Injectable({\r\n    // One object for the entire website\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    public userName: string;\r\n    public userType: string;\r\n    // HttpClient injection (a class variable will be automatically created)\r\n    constructor(private http: HttpClient) {\r\n        // this.http = http;\r\n        this.userName = '';\r\n    }\r\n\r\n    public login(userLoginDetails: UserLoginDetails): Observable<SuccessfulLoginServerResponse> {\r\n\r\n        //  The http request will be sent after the subscribe() method will be called\r\n        return this.http.post<SuccessfulLoginServerResponse>(\"http://localhost:4200/users/login\", userLoginDetails);\r\n    }\r\n\r\n    public createUser(UserRegisterDetails: UserRegisterDetails): Observable<SuccessfulLoginServerResponse> {\r\n        return this.http.post<SuccessfulLoginServerResponse>(\"http://localhost:4200/users\", UserRegisterDetails);\r\n    }\r\n\r\n    public getCustomerCityAddress() {\r\n        return this.http.get(\"http://localhost:4200/users/city\");\r\n    }\r\n    public getCustomerStreetAddress() {\r\n        return this.http.get(\"http://localhost:4200/users/street\");\r\n    }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { Product } from 'src/app/models/Product';\r\nimport { CartItemsService } from 'src/app/services/CartItemsService';\r\n\r\n@Component({\r\n  selector: 'app-modal',\r\n  templateUrl: './modal.html',\r\n  styleUrls: ['./modal.css']\r\n})\r\nexport class ModalComponent {\r\n\r\n  @Input()\r\n  product: Product\r\n  @Input()\r\n  quantity: number;\r\n  btnSubText: string;\r\n  isInOrder: boolean;\r\n\r\n  @ViewChild('myModal', { static: false }) modal: ElementRef;\r\n  @ViewChild('myModal', { static: false }) receiptModal: ElementRef;\r\n\r\n  constructor(private cartItemsService: CartItemsService) {\r\n    this.product = new Product;\r\n    this.quantity = 1;\r\n    this.isInOrder = false;\r\n  }\r\n  \r\n  ngOnInit() {\r\n    this.intCloseModal()\r\n  }\r\n\r\n  addToCart(quantity: number) {\r\n    if (this.cartItemsService.cartItemsMap.has(this.product.productID)) {\r\n      this.updateCartItem(this.product, quantity)\r\n      this.btnSubText = \"add to cart\";\r\n    }\r\n    else {\r\n      let newItem = Object.assign(new Product, this.product)\r\n\r\n      newItem.quantity = quantity;\r\n      newItem.totalPrice = newItem.price * quantity;\r\n      newItem.cartID = parseInt(sessionStorage.getItem(\"cartID\"));\r\n\r\n      let observable = this.cartItemsService.addNewItemToCart(newItem);\r\n      observable.subscribe((response) => {\r\n        let itemID = response;\r\n        newItem.itemID = +itemID\r\n        this.cartItemsService.cartItemsMap.set(newItem.productID, newItem);\r\n        this.cartItemsService.totalPrice += newItem.totalPrice\r\n        this.quantity = 1;\r\n\r\n      }, error => {\r\n        alert('Failed to add new item ' + JSON.stringify(error));\r\n      });\r\n    }\r\n    this.close();\r\n  }\r\n\r\n  updateCartItem(item: Product, quantity: number) {\r\n    this.product = item;\r\n    let observable = this.cartItemsService.updateCartItem(item);\r\n    observable.subscribe(() => {\r\n      let cartItem = this.cartItemsService.cartItemsMap.get(item.productID);\r\n      this.cartItemsService.totalPrice -= cartItem.totalPrice\r\n      cartItem.quantity = quantity;\r\n      cartItem.totalPrice = cartItem.price * quantity;\r\n      this.cartItemsService.totalPrice += cartItem.totalPrice\r\n      this.cartItemsService.cartItemsMap.set(cartItem.productID, cartItem);\r\n      this.quantity = 1;\r\n\r\n    }, (error: any) => {\r\n      alert('Failed to update cart item ' + JSON.stringify(error));\r\n    });\r\n  }\r\n\r\n  open(product: Product) {\r\n    this.isInOrder = false;\r\n    this.product = product;\r\n    this.modal.nativeElement.style.display = 'block';\r\n  }\r\n\r\n  public modalOpen() {\r\n    this.isInOrder = true;\r\n    this.modal.nativeElement.style.display = 'block';\r\n  }\r\n\r\n  close() {\r\n    this.btnSubText = \"add to cart\";\r\n    this.modal.nativeElement.style.display = 'none';\r\n  }\r\n\r\n  intCloseModal() {\r\n    this.close();\r\n    this.quantity = 1;\r\n  }\r\n}","<div #myModal *ngIf=\"!isInOrder\" class=\"container\">\r\n    <div class=\"content\">\r\n        <button (click)=\"close()\">X</button>\r\n        <div class=\"top\"><img src={{product.imageURL}} #imgCard alt=\"\"></div>\r\n        <div class=\"main\">\r\n            <h3>{{product.productName}} -- {{product.price}}</h3><br>\r\n            <input type=\"number\" min=\"1\" [(ngModel)]=\"quantity\" value=\"{{product.quantity}}\"><br>\r\n            <button (click)=addToCart(quantity)>{{btnSubText}}</button>\r\n        </div>\r\n    </div>\r\n\r\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { CartsService } from 'src/app/services/CartsService';\n\n@Component({\n  selector: 'app-product-card',\n  templateUrl: './product-card.component.html',\n  styleUrls: ['./product-card.component.css']\n})\nexport class ProductCardComponent implements OnInit {\n  @Input()\n  status: boolean = false;\n  @Input()\n  productID: number;\n  @Input()\n  productName: string;\n  @Input()\n  categoryID: number;\n  @Input()\n  price: number;\n  @Input()\n  imageURL: string;\n  @Input()\n  btnValue: string;\n  @Input()\n  quantity: string;\n  @Input()\n  iClassName: string;\n  // The event name the parent should hook to\n  @Output() childEvent = new EventEmitter<string>();\n\n  myClick() {\n    // Sending the event to the parent\n    this.childEvent.emit(\"Some string value from child to parent\");\n  }\n\n  constructor(public cartsService: CartsService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","\n<div [ngClass]=\"status ? 'none' : 'top'\"><img src={{imageURL}} alt=\"\"></div>\n<div class=\"main\"><h3>{{productName}}{{quantity}} {{price}}</h3><br>\n<button *ngIf=\"!this.cartsService.isInOrder\" id='moreInfoBtn' (click)=\"myClick()\"><i class=\"{{iClassName}}\"></i>{{btnValue}}</button></div>\n\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { LayoutComponent } from '../components/layout/layout.component';\nimport { MainComponent } from '../components/main/main.component';\nimport { HeaderComponent } from '../components/header/header.component';\nimport { CartComponent } from '../components/customer/cart/cart.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { LoginComponent } from '../components/main/login/login.component';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AboutComponent } from '../components/main/about/about.component';\nimport { GeneralInfoComponent } from '../components/main/general-info/general-info.component';\nimport { RegisterComponent } from '../components/register/register.component';\nimport { RegisterPart1Component } from '../components/register/register-part1/register-part1.component';\nimport { RegisterPart2Component } from '../components/register/register-part2/register-part2.component';\nimport { CustomerComponent } from '../components/customer/customer.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { AuthenticationInterceptor } from '../interceptors/AuthenticationInterceptor';\nimport { ProductsService } from '../services/ProductsService';\nimport { UserService } from '../services/UserService';\nimport { ProductCardComponent } from '../components/product-card/product-card.component';\nimport { ModalComponent } from '../components/modal/modal';\nimport { CheckoutComponent } from '../components/customer/checkout/checkout.component';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport {MatFormFieldModule} from '@angular/material/form-field';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport { AdminComponent } from '../components/admin/admin.component';\nimport { ProductManagementComponent } from '../components/product-management/product-management.component';\nimport { ProductsPipeByCategory } from '../pipes/ProductsPipeByCategory';\n\n@NgModule({\n  declarations: [\n    LayoutComponent,\n    MainComponent,\n    HeaderComponent,\n    CartComponent,\n    LoginComponent,\n    AboutComponent,\n    AdminComponent,\n    GeneralInfoComponent,\n    RegisterComponent,\n    RegisterPart1Component,\n    RegisterPart2Component,\n    CustomerComponent,\n    ProductCardComponent,\n    ModalComponent,\n    CheckoutComponent,\n    ProductManagementComponent,\n    ProductsPipeByCategory,\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule, ReactiveFormsModule,\n    AppRoutingModule, RouterModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatFormFieldModule,\n    MatProgressBarModule\n  ],\n  providers: [UserService\n    , ProductsService\n    , { provide: HTTP_INTERCEPTORS, useClass: AuthenticationInterceptor, multi: true }\n  ],\n  bootstrap: [LayoutComponent]\n})\nexport class AppModule { }\n","import { BreakpointObserver } from '@angular/cdk/layout';\nimport { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators, FormBuilder, ValidatorFn, AbstractControl } from '@angular/forms';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { City } from 'src/app/models/City';\nimport { OrderDetails } from 'src/app/models/OrderDetails';\nimport { CartItemsService } from 'src/app/services/CartItemsService';\nimport { CartsService } from 'src/app/services/CartsService';\nimport { OrdersService } from 'src/app/services/OrdersService';\nimport { UserService } from 'src/app/services/UserService';\n\n@Component({\n  selector: 'app-checkout',\n  templateUrl: './checkout.component.html',\n  styleUrls: ['./checkout.component.css']\n})\nexport class CheckoutComponent implements OnInit {\n\n\n  public orderFormGroup: FormGroup;\n  public url: SafeUrl;\n  minDate = new Date(Date.now());\n  public cities: Array<string>;\n  public myBusyDays: any[]\n\n  constructor(private formBuilder: FormBuilder,\n    private ordersService: OrdersService,\n    private cartsService: CartsService,\n    private userService: UserService,\n    private breakpointObserver: BreakpointObserver,\n    private cartItemsService: CartItemsService,\n    private sanitizer: DomSanitizer,\n    private router: Router) {\n    this.cities = Object.values(City);\n    this.url = null;\n    this.myBusyDays = []\n\n  }\n  @ViewChild('myModal', { static: false }) modal: ElementRef;\n\n\n  ngOnInit(): void {\n    this.getOrdersBusyDays();\n    this.orderFormGroup = this.formBuilder.group({\n      city: ['', Validators.required],\n      street: ['', Validators.required],\n      deliveryDate: ['', [Validators.required, this.weekendValidator(), this.busyDaysValidator()]],\n      creditCard: ['', [Validators.required, Validators.pattern(\"^(?:4[0-9]{12}(?:[0-9]{3})?|[25][1-7][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\\d{3})\\d{11})$\")]]\n    })\n  }\n\n  onDblGetCity() {\n    let observable = this.userService.getCustomerCityAddress();\n    observable.subscribe((response: string) => {\n      this.orderFormGroup.get(\"city\").setValue(response);\n    }, error => {\n      alert('Failed to get products ' + JSON.stringify(error));\n    });\n  }\n\n  onDblGetStreet() {\n    let observable = this.userService.getCustomerStreetAddress();\n    observable.subscribe(response => {\n      this.orderFormGroup.get(\"street\").setValue(response);\n    }, error => {\n      alert('Failed to get products ' + JSON.stringify(error));\n    });\n  }\n\n  receieptContent() {\n    let payment4LastDigits = this.creditCard.value.toString().slice(-4).toString();\n    let string = this.city.value + \"\\n\" +\n      this.street.value +\n      \"\\n  \" + this.deliveryDate.value + \"\\n\" + \"------------------------------------------------\\n\" +\n      \"\\n \\n\";\n    this.cartItemsService.cartItemsMap.forEach(item => {\n      string += item.productName + \"\\tx\" + item.quantity + \"\\t\" + item.totalPrice + \"₪ \\n\"\n    });\n    string += \"\\n\" + \"---------------------------------------------------\\n\" +\n      \"\\n 💳 \" + payment4LastDigits + \"  ****  ****  ****\" + \"\\n\" + \"\\n\" + \"total price: \" + this.cartItemsService.totalPrice + \"₪\"\n    return string;\n  }\n\n  getOrdersBusyDays() {\n    let observable = this.ordersService.getOrdersBusyDays();\n    observable.subscribe((response: any) => {\n      response.forEach((index: any) => {\n        this.myBusyDays.push(new Date(index.dateToDeliver));\n      });\n    }, error => {\n      alert('Failed to get products ' + JSON.stringify(error));\n    });\n  }\n\n  close() {\n    this.cartsService.isInOrder = !this.cartsService.isInOrder;\n    this.router.navigate([\"/home\"]);\n    this.modal.nativeElement.style.display = 'none';\n  }\n\n  order() {\n    let deliveryDate = this.deliveryDate.value;\n    const blob = new Blob([this.receieptContent()], { type: 'text/plain' });\n    this.url = this.sanitizer.bypassSecurityTrustUrl(window.URL.createObjectURL(blob));\n    let payment4LastDigits = this.creditCard.value.toString().slice(-4);\n    let order = new OrderDetails(parseInt(sessionStorage.getItem(\"cartID\")), this.cartItemsService.totalPrice,\n      this.city.value, this.street.value, new Date(deliveryDate.getTime() - deliveryDate.getTimezoneOffset() * 60000), payment4LastDigits);\n    let observable = this.ordersService.addNewOrder(order)\n    observable.subscribe(() => {\n      this.modal.nativeElement.style.display = 'block';\n      this.initCart();\n    }, error => {\n      alert('Failed to make order ' + JSON.stringify(error));\n      console.log(error);\n    });\n  }\n\n  initCart() {\n    let observable = this.cartsService.creatNewCart();\n    observable.subscribe((response: number) => {\n      sessionStorage.removeItem(\"cartID\");\n      this.cartItemsService.cartItemsMap = new Map();\n      this.cartsService.cartID = response;\n      this.cartItemsService.totalPrice = 0;\n      sessionStorage.setItem(\"cartID\", response.toString());\n    })\n\n  }\n\n  get city() {\n    return this.orderFormGroup.get('city');\n  }\n  get street() {\n    return this.orderFormGroup.get('street');\n  }\n  get deliveryDate() {\n    return this.orderFormGroup.get('deliveryDate');\n  }\n  get creditCard() {\n    return this.orderFormGroup.get('creditCard');\n  }\n  get isMobile() {\n    return this.breakpointObserver.isMatched('(max-width: 767px)');\n  }\n\n  busyDaysFilter = (d: Date): boolean => {\n    const time = d.getTime();\n    const day = (d || new Date()).getDay();\n    // Prevent Saturday, Friday and busy days from being selected.\n    return !this.myBusyDays.find(x => x.getTime() == time) && day !== 5 && day !== 6;\n  }\n\n  busyDaysValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      let forbidden = true;\n      if (control.value) {\n        if (!this.myBusyDays.find(x => x.getTime() == control.value)) {\n          forbidden = false;\n        }\n      }\n      return forbidden ? { 'busyDays': true } : null;\n    };\n\n  }\n\n  weekendValidator(): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } | null => {\n      let forbidden = true;\n      if (control.value) {\n        const day = control.value.getDay();\n        if (day !== 5 && day !== 6) {\n          forbidden = false;\n        }\n      }\n      return forbidden ? { 'weekend': true } : null;\n    };\n\n  }\n}\n","<div class=\"parent\">\n    <form [formGroup]=\"orderFormGroup\" (ngSubmit)=\"order()\">\n        <mat-form-field (dblclick)=\"onDblGetCity()\" appearance=\"fill\">\n            <mat-label>City</mat-label>\n            <mat-select matNativeControl formControlName=\"city\">\n                <mat-option *ngFor=\"let city of cities\" [value]='city'>{{city}}</mat-option>\n            </mat-select><br>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"Street\" name=\"street\" (dblclick)=\"onDblGetStreet()\"\n                formControlName=\"street\"><br>\n            <mat-error *ngIf='street.invalid && street.touched'>\n                Your street does not look right\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <mat-label>Choose a delivery date</mat-label>\n            <input matInput [matDatepickerFilter]=\"busyDaysFilter\" [matDatepicker]=\"picker\" [min]=\"minDate\"\n                formControlName=\"deliveryDate\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker [touchUi]=\"isMobile\" #picker></mat-datepicker>\n            <mat-error *ngIf='!deliveryDate.hasError(\"requierd\") && deliveryDate.touched'>\n                Delivery date required\n            </mat-error>\n            <mat-error *ngIf='deliveryDate.hasError(\"weekend\") && deliveryDate.touched'>\n                we're dont deliver at weekends\n            </mat-error>\n            <mat-error *ngIf='!deliveryDate.hasError(\"busyDays\") && deliveryDate.touched'>\n                we're occupied for deliver that day\n            </mat-error>\n        </mat-form-field>\n        <mat-form-field>\n            <input matInput type=\"text\" placeholder=\"Credit Card Number\" name=\"creditCard\"\n                formControlName=\"creditCard\"><br>\n            <mat-error *ngIf='creditCard.invalid && creditCard.touched'>\n                Your credit card does not look right\n            </mat-error>\n        </mat-form-field>\n        <div class=\"btn-form\">\n            <button mat-raised-button [disabled]=\"orderFormGroup.invalid\" color=\"primary\">Submit</button>\n        </div>\n    </form>\n</div>\n<div #myModal class=\"container\">\n    <div class=\"content\">\n        <div class=\"top\">\n            <button (click)=\"close()\">x</button>\n            <h1>Your order completed!</h1>\n        </div>\n        <div class=\"main\">\n            <a download=\"receipt.txt\" [href]=\"this.url\">click here to download your receipt</a>\n        </div>\n    </div>\n</div>","export class UserLoginDetails{\r\n    public constructor(\r\n        public email?:string,\r\n        public password?:string,\r\n    ){}\r\n\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { CartStatus } from '../models/CartStatus';\r\n\r\n\r\n\r\n@Injectable({\r\n    // One object for the entire website\r\n    providedIn: 'root'\r\n})\r\nexport class CartsService {\r\n\r\n    public cartID: number;\r\n    public isInOrder: boolean;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.cartID = 0;\r\n        this.isInOrder = false;\r\n    }\r\n    public creatNewCart(): Observable<number> {\r\n        return this.http.post<number>(\"http://localhost:4200/carts\", null);\r\n    }\r\n    public deleteAllCartItems(cartID: number) {\r\n        return this.http.delete(\"http://localhost:4200/carts/\" + cartID);\r\n    }\r\n    public getCartStatus() {\r\n        return this.http.get<CartStatus>(\"http://localhost:4200/carts/\");\r\n    }\r\n\r\n}","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { AppModule } from './app/modules/app.module';\n\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}